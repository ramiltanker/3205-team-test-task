{"version":3,"sources":["pages/Converter/Converter.module.css","pages/Currencies/Currencies.module.css","components/NavMenu/NavMenu.module.css","components/ChangeBaseCurrency/ChangeBaseCurrency.module.css","components/InputString/InputString.module.css","components/Header/Header.module.css","api/getCurrencies.tsx","redux/actions/currencies.tsx","redux/reducers/currencies.ts","redux/reducers/rootReducer.ts","redux/store.tsx","redux/typedHooks.ts","components/InputString/InputString.tsx","components/Button/Button.tsx","pages/Converter/Converter.tsx","customHooks/FormValidation.tsx","pages/Currencies/Currencies.tsx","components/NavMenu/NavMenu.tsx","components/ChangeBaseCurrency/ChangeBaseCurrency.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","getCurrencies","from","fetch","method","headers","Accept","then","res","ok","json","Promise","reject","status","SET_DEFAULT_BASE_CURRENCY","GET_CURRENCIES_REQUEST","GET_CURRENCIES_FAILED","GET_CURRENCIES_SUCCESS","initialState","basedCurrency","currencies","undefined","isGetCurencyRequest","isGetCurencyFailed","isGetCurencySuccess","rootReducer","combineReducers","currency","state","action","type","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","useSelector","selectorHook","useDispatch","dispatchHook","Input","styled","input","props","width","style","marginRight","InputString","inputName","inputType","inputId","labelText","inputWidth","inputValue","onChange","inputPlaceholder","className","styles","input_box","label","placeholder","name","value","id","ButtonStyled","button","height","alignSelf","marginLeft","marginTop","marginBottom","Button","text","isButtonDisabled","disabled","Converter","React","useState","result","setResult","currenciesArr","setCurrenciesArr","currencyTo","setCurrencyTo","valueOfCurrency","setValueOfCurrency","values","setValues","errors","setErrors","isValid","setIsValid","isDirty","setIsDirty","isEmail","setIsEmail","re","resetForm","useCallback","newErrors","newIsValid","newIsDirty","newEmail","handleChange","event","target","validationMessage","checkValidity","test","String","toLowerCase","useFormWithValidation","useEffect","results","resultsArr","key","currencyObj","push","number","inputArr","convert","match","numberArr","toUpperCase","converter","form","onSubmit","e","preventDefault","resultSumm","forEach","Number","Currencies","setResults","container","map","index","currencyValue","NavMenu","nav_menu","to","link","ChangeBaseCurrency","dispatch","box","onClick","handleSetUSD","handleSetRUB","Header","header","App","language","navigator","substr","a","console","log","catch","error","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,4B,mBCApED,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,KAAO,wB,mBCA9DD,EAAOC,QAAU,CAAC,IAAM,gCAAgC,OAAS,qC,mBCAjED,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,6B,mBCArED,EAAOC,QAAU,CAAC,OAAS,yB,yJCqBZC,EAtBO,SAACC,GACrB,OAAOC,MAAM,2CAAD,OACiCD,EADjC,yCAEV,CACEE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAInBC,MAAK,SAACC,GACL,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,YAEtCN,MAAK,SAACC,GACL,OAAOA,MCRAM,EACX,4BAEWC,EACX,yBACWC,EACX,wBACWC,EACX,yBCMWC,EAAmC,CAC9CC,cAAe,GACfC,gBAAYC,EAEZC,qBAAqB,EACrBC,oBAAoB,EACpBC,qBAAqB,GC1BVC,EAAcC,YAAgB,CACzCC,SD4B+B,WAG3B,IAFJC,EAEG,uDAFKV,EACRW,EACG,uCACH,OAAQA,EAAOC,MACb,KAAKhB,EACH,OAAO,2BACFc,GADL,IAEET,cAAeU,EAAOV,gBAG1B,KAAKJ,EACH,OAAO,2BACFa,GADL,IAEEN,qBAAqB,EACrBC,oBAAoB,EACpBC,qBAAqB,IAGzB,KAAKR,EACH,OAAO,2BACFY,GADL,IAEEN,qBAAqB,EACrBC,oBAAoB,EACpBC,qBAAqB,IAGzB,KAAKP,EACH,OAAO,2BACFW,GADL,IAEER,WAAYS,EAAOT,WACnBE,qBAAqB,EACrBC,oBAAoB,EACpBC,qBAAqB,IAIzB,QACE,OAAOI,M,QEjEPG,GAFmBC,OAAOC,sCAAwCC,KAEtCC,YAAgBC,MAErCC,EAAQC,YAAYb,EAAaM,G,eCAjCQ,EAA+CC,IAE/CC,EAAc,kBAAMC,e,+ECa3BC,EAAQC,IAAOC,MAAV,ibACA,SAACC,GAAD,OAAWA,EAAMC,SAaV,SAACD,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAaC,eAqC3BC,EA5BuB,SAAC,GAUhC,IATLC,EASI,EATJA,UACAC,EAQI,EARJA,UACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,UACAC,EAKI,EALJA,WACAN,EAII,EAJJA,YACAO,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACAC,EACI,EADJA,iBAEA,OACE,sBAAKC,UAAWC,IAAOC,UAAvB,UACE,uBAAOF,UAAWC,IAAOE,MAAzB,SAAiCR,IACjC,cAACX,EAAD,CACEoB,YAAaL,EACbV,MAAO,CAAEC,YAAaA,GACtBF,MAAOQ,EACPzB,KAAMsB,EACNY,KAAMb,EACNc,MAAOT,EACPC,SAAUA,EACVS,GAAIb,QClDNc,EAAevB,IAAOwB,OAAV,yoBACP,SAACtB,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAaD,SACvB,SAACD,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAaqB,UAapB,SAACvB,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAasB,aACtB,SAACxB,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAaC,eACzB,SAACH,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAauB,cACzB,SAACzB,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAawB,aACrB,SAAC1B,GAAD,uBAAWA,EAAME,aAAjB,aAAW,EAAayB,gBA2C5BC,EA7Ba,SAAC,GAUtB,IATLC,EASI,EATJA,KACA5B,EAQI,EARJA,MACAsB,EAOI,EAPJA,OACApB,EAMI,EANJA,YACAsB,EAKI,EALJA,WACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,aACAH,EAEI,EAFJA,UACAM,EACI,EADJA,iBAEA,OACE,cAACT,EAAD,CACEnB,MAAO,CACLC,YAAaA,EACbsB,WAAYA,EACZC,UAAWA,EACXC,aAAcA,EACd1B,MAAOA,EACPsB,OAAQA,EACRC,UAAWA,GAEbO,SAAUD,EAVZ,SAYGD,KC0CQG,EA1FG,WAEhB,MAA4BC,IAAMC,WAAlC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAA0CH,IAAMC,SAC9C,IADF,mBAAOG,EAAP,KAAsBC,EAAtB,KAIA,EAAoCL,IAAMC,SAAiB,IAA3D,mBAAOK,EAAP,KAAmBC,EAAnB,KAEA,EAA8CP,IAAMC,SAAiB,IAArE,mBAAOO,EAAP,KAAwBC,EAAxB,KAEA,EAAsCjD,GAAY,SAACF,GAAD,OAAWA,EAAMV,YAA3DP,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,cAEd0B,EClCD,WACL,MAA4BkC,IAAMC,SAAkB,IAApD,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA4BX,IAAMC,SAAS,IAA3C,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA8Bb,IAAMC,UAAS,GAA7C,mBAAOa,EAAP,KAAgBC,EAAhB,KAEA,EAA8Bf,IAAMC,UAAS,GAA7C,mBAAOe,EAAP,KAAgBC,EAAhB,KACA,EAA8BjB,IAAMC,UAAS,GAA7C,mBAAOiB,EAAP,KAAgBC,EAAhB,KAEMC,EACJ,uHAgBIC,EAAYC,uBAChB,WAMM,IAJJC,EAIG,uDAJS,GACZC,EAGG,wDAFHC,EAEG,wDADHC,EACG,wDACHf,EADG,uDALS,IAOZE,EAAUU,GACVR,EAAWS,GACXP,EAAWQ,GACXN,EAAWO,KAEb,CAACf,EAAWE,EAAWE,EAAYE,EAAYE,IAGjD,MAAO,CAAET,SAAQiB,aA/BI,SAACC,GACpB,IAAMC,EAASD,EAAMC,OACf5C,EAAe4C,EAAO5C,KACtBC,EAAgB2C,EAAO3C,MAC7ByB,EAAU,2BAAKD,GAAN,kBAAezB,EAAOC,KAC/B2B,EAAU,2BAAKD,GAAN,kBAAe3B,EAAO4C,EAAOC,qBACtCf,EAAWc,EAAOE,iBAEVd,GAAR/B,GACS,SAATD,GAAmBmC,EAAGY,KAAKC,OAAO/C,GAAOgD,eACrCf,GAAW,GACXA,GAAW,IAoBcP,SAAQE,UAASO,YAAWL,UAASE,WDRtDiB,GAEdnC,IAAMoC,WAAU,WACd,IAAMC,EAAgChG,GAAcA,EAAWgG,QAC3DC,EAAkC,GAEtC,IAAK,IAAIC,KAAOF,EAAS,CACvB,IAAIG,EAAyB,eAC1BD,EAAMF,EAAQE,IAEjBD,EAAWG,KAAKD,GAGlBnC,EAAiBiC,KAChB,CAACjG,IAEJ2D,IAAMoC,WAAU,WACd,IAAIxF,EAAmB,GACnB8F,EAAiB,GAEjBC,EACF7E,EAAM4C,OAAOkC,SAAW9E,EAAM4C,OAAOkC,QAAQC,MAAO,cAElDF,GAAyB,OAAbA,IACd/F,EAAW+F,EAAS,IAGtB,IAAIG,EAAYhF,EAAM4C,OAAOkC,SAAW9E,EAAM4C,OAAOkC,QAAQC,MAAM,QAE/DC,GAA2B,OAAdA,IACfJ,EAASI,EAAU,IAGrBrC,EAAmBiC,GACnBnC,EAAc3D,EAASmG,iBACtB,CAACjF,EAAM4C,OAAOkC,UAcjB,OACE,0BAAShE,UAAWC,IAAOmE,UAA3B,UACE,uBAAMpE,UAAWC,IAAOoE,KAAMC,SAdb,SAACC,GACpBA,EAAEC,iBACF,IAAIC,EAAqB,EACzBjD,EAAckD,SAAQ,SAAC1G,GACrB,IAAK,IAAI2F,KAAO3F,EACV0D,IAAeiC,IACjBc,EAAazG,EAAS2F,GAAOgB,OAAO/C,IAExCL,EAAUkD,OAMV,UACE,cAAC,EAAD,CACEjF,UAAU,UACVC,UAAU,OACVC,QAAQ,UACRC,UAAU,qEACVC,WAAW,QACXC,WAAYX,EAAM4C,OAAOkC,SAAW,GACpClE,SAAUZ,EAAM6D,aAChBhD,iBAAgB,aACI,QAAlBvC,EAA0B,MAAQ,MADpB,gBAEU,QAAlBA,EAA0B,MAAQ,SAE5C,cAAC,EAAD,CACEwD,KAAK,uFACL5B,MAAM,QACNsB,OAAO,OACPG,UAAU,YAGd,mBAAGb,UAAWC,IAAOqB,OAArB,SAA8BA,Q,iBEzDrBsD,EArCI,WACjB,MAAsChG,GAAY,SAACX,GAAD,OAAWA,EAAMD,YAA3DR,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,WACvB,EAA8B2D,IAAMC,SAA8B,IAAlE,mBAAOoC,EAAP,KAAgBoB,EAAhB,KAgBA,OAdAzD,IAAMoC,WAAU,WACd,IAAMC,EAAgChG,GAAcA,EAAWgG,QAC3DC,EAAkC,GAEtC,IAAK,IAAIC,KAAOF,EAAS,CACvB,IAAIG,EAAyB,eAC1BD,EAAMF,EAAQE,IAEjBD,EAAWG,KAAKD,GAGlBiB,EAAWnB,KACV,CAACjG,IAGF,yBAASuC,UAAWC,IAAOxC,WAA3B,SACE,qBAAKuC,UAAWC,IAAO6E,UAAvB,SACGrB,EAAQsB,KAAI,SAAC/G,EAAegH,GAC3B,IAAIC,EAAgB,GACpB,IAAK,IAAItB,KAAO3F,EACdiH,EAAgBtB,EAElB,OACE,oBAAG3D,UAAWC,IAAOjC,SAArB,eACKR,EADL,MACiD,EAA1BQ,EAASiH,GADhC,IACqDA,IADjBD,W,kCC1BjCE,EAbC,WACd,OACE,sBAAKlF,UAAWC,IAAOkF,SAAvB,UACE,cAAC,IAAD,CAAMC,GAAG,aAAapF,UAAWC,IAAOoF,KAAxC,oEAGA,cAAC,IAAD,CAAMD,GAAG,cAAcpF,UAAWC,IAAOoF,KAAzC,sD,iBCoCSC,EAnCY,WACzB,IAAMC,EAAWzG,IAYjB,OACE,sBAAKkB,UAAWC,IAAOuF,IAAvB,UACE,wBACExF,UAAWC,IAAOQ,OAClBgF,QAAS,SAAClB,GAAD,OAdM,SAACA,GACpBA,EAAEC,iBACFe,EAAS,CAAEpH,KAAMhB,EAA2BK,cAAe,QAarDkI,CAAanB,IAHjB,iBAQA,wBACEvE,UAAWC,IAAOQ,OAClBgF,QAAS,SAAClB,GAAD,OAjBM,SAACA,GACpBA,EAAEC,iBACFe,EAAS,CAAEpH,KAAMhB,EAA2BK,cAAe,QAgBrDmI,CAAapB,IAHjB,qBClBSqB,GATA,WACb,OACE,yBAAQ5F,UAAWC,IAAO4F,OAA1B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCqCSC,OAjCf,WACE,IAAMP,EAAWzG,IAEjB,EAA0BF,GAAY,SAACF,GAAD,OAAWA,EAAMV,YAA/CR,EAAR,EAAQA,cAeR,OAbA4D,IAAMoC,WAAU,WACd,IAAIuC,EAAW1H,OAAO2H,WAAa3H,OAAO2H,UAAUD,SAEnC,QADjBA,EAAWA,EAASE,OAAO,EAAG,GAAG3C,gBAE/BiC,EAAS,CAAEpH,KAAMhB,EAA2BK,cAAe,QAC5C,OAAbuI,GACFR,EAAS,CAAEpH,KAAMhB,EAA2BK,cAAe,UAC5D,CAAC+H,IAEJnE,IAAMoC,WAAU,Wba2B,IAC3CjH,EabEgJ,GbaFhJ,Eab+BiB,EbiB/B,uCAAO,WAAO+H,GAAP,SAAAW,EAAA,sDACLX,EAAS,CACPpH,KAAMf,IAERd,EAAcC,GACXK,MAAK,SAACC,GACDA,EACF0I,EAAS,CACPpH,KAAMb,EACNG,WAAYZ,KAGdsJ,QAAQC,IAAIvJ,GACZ0I,EAAS,CACPpH,KAAMd,QAIXgJ,OAAM,SAACC,GACNf,EAAS,CACPpH,KAAMd,IAER8I,QAAQC,IAAIE,MAtBX,2CAAP,0DahBG,CAAC9I,EAAe+H,IAGjB,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,aC7BKC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB9J,MAAK,YAAkD,IAA/C+J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCUdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUxI,MAAOA,EAAjB,SACE,cAAC,GAAD,UAINyI,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.5c5b5a82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"converter\":\"Converter_converter__2WV2W\",\"result\":\"Converter_result__IZ3Wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencies\":\"Currencies_currencies__sfcgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_menu\":\"NavMenu_nav_menu__34HtU\",\"link\":\"NavMenu_link__2Ll4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"ChangeBaseCurrency_box__3KfXN\",\"button\":\"ChangeBaseCurrency_button__1fRcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_box\":\"InputString_input_box__wFSpy\",\"label\":\"InputString_label__24DUI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-R9q\"};","const getCurrencies = (from: string) => {\r\n  return fetch(\r\n    `https://api.fastforex.io/fetch-all?from=${from}&api_key=7a946d40a9-8d56afe14f-r21f8y`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  )\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n\r\nexport default getCurrencies;\r\n","import { AppThunk } from \"../types\";\r\n\r\n// Types\r\nimport { TCurrencies } from \"../types/currencies\";\r\n// Types\r\n\r\n// Api\r\nimport getCurrencies from \"../../api/getCurrencies\";\r\n// Api\r\n\r\nexport const SET_DEFAULT_BASE_CURRENCY: \"SET_DEFAULT_BASE_CURRENCY\" =\r\n  \"SET_DEFAULT_BASE_CURRENCY\";\r\n\r\nexport const GET_CURRENCIES_REQUEST: \"GET_CURRENCIES_REQUEST\" =\r\n  \"GET_CURRENCIES_REQUEST\";\r\nexport const GET_CURRENCIES_FAILED: \"GET_CURRENCIES_FAILED\" =\r\n  \"GET_CURRENCIES_FAILED\";\r\nexport const GET_CURRENCIES_SUCCESS: \"GET_CURRENCIES_SUCCESS\" =\r\n  \"GET_CURRENCIES_SUCCESS\";\r\n\r\ninterface ISetDefaultBaseCurrency {\r\n  readonly type: typeof SET_DEFAULT_BASE_CURRENCY;\r\n  basedCurrency: string;\r\n}\r\n\r\ninterface IGetCurrenciesRequest {\r\n  readonly type: typeof GET_CURRENCIES_REQUEST;\r\n}\r\n\r\ninterface IGetCurrenciesFailed {\r\n  readonly type: typeof GET_CURRENCIES_FAILED;\r\n}\r\n\r\ninterface IGetCurrenciesSuccess {\r\n  readonly type: typeof GET_CURRENCIES_SUCCESS;\r\n  currencies: TCurrencies;\r\n}\r\n\r\nexport type TCurrenciesActions =\r\n  | ISetDefaultBaseCurrency\r\n  | IGetCurrenciesRequest\r\n  | IGetCurrenciesFailed\r\n  | IGetCurrenciesSuccess;\r\n\r\nexport const handleGetCurrencies: AppThunk = (\r\n  from: string,\r\n  one: string,\r\n  two: string\r\n) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: GET_CURRENCIES_REQUEST,\r\n    });\r\n    getCurrencies(from)\r\n      .then((res) => {\r\n        if (res) {\r\n          dispatch({\r\n            type: GET_CURRENCIES_SUCCESS,\r\n            currencies: res,\r\n          });\r\n        } else {\r\n          console.log(res);\r\n          dispatch({\r\n            type: GET_CURRENCIES_FAILED,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: GET_CURRENCIES_FAILED,\r\n        });\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","import {\r\n  SET_DEFAULT_BASE_CURRENCY,\r\n  GET_CURRENCIES_REQUEST,\r\n  GET_CURRENCIES_FAILED,\r\n  GET_CURRENCIES_SUCCESS,\r\n} from \"../actions/currencies\";\r\n\r\n// Types\r\nimport { TCurrencies } from \"../types/currencies\";\r\n// Types\r\n\r\n// Union тип\r\nimport { TCurrenciesActions } from \"../actions/currencies\";\r\n// Union тип\r\n\r\ntype TCurrenciesReducer = {\r\n  basedCurrency: string;\r\n  currencies?: TCurrencies;\r\n\r\n  isGetCurencyRequest: boolean;\r\n  isGetCurencyFailed: boolean;\r\n  isGetCurencySuccess: boolean;\r\n};\r\n\r\nexport const initialState: TCurrenciesReducer = {\r\n  basedCurrency: \"\",\r\n  currencies: undefined,\r\n\r\n  isGetCurencyRequest: false,\r\n  isGetCurencyFailed: false,\r\n  isGetCurencySuccess: false,\r\n};\r\n\r\nexport const currenciesReducer = (\r\n  state = initialState,\r\n  action: TCurrenciesActions\r\n) => {\r\n  switch (action.type) {\r\n    case SET_DEFAULT_BASE_CURRENCY: {\r\n      return {\r\n        ...state,\r\n        basedCurrency: action.basedCurrency,\r\n      };\r\n    }\r\n    case GET_CURRENCIES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isGetCurencyRequest: true,\r\n        isGetCurencyFailed: false,\r\n        isGetCurencySuccess: false,\r\n      };\r\n    }\r\n    case GET_CURRENCIES_FAILED: {\r\n      return {\r\n        ...state,\r\n        isGetCurencyRequest: false,\r\n        isGetCurencyFailed: true,\r\n        isGetCurencySuccess: false,\r\n      };\r\n    }\r\n    case GET_CURRENCIES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        currencies: action.currencies,\r\n        isGetCurencyRequest: false,\r\n        isGetCurencyFailed: false,\r\n        isGetCurencySuccess: true,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport { currenciesReducer } from \"./currencies\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  currency: currenciesReducer,\r\n});\r\n","import { rootReducer } from \"./reducers/rootReducer\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import {\n  TypedUseSelectorHook,\n  useSelector as selectorHook,\n  useDispatch as dispatchHook,\n} from \"react-redux\";\nimport { RootState, AppThunk, AppDispatch } from \"./types\";\n\n// Теперь этот хук «знает» структуру хранилища\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n// Хук не даст отправить экшен, который ему не знаком\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\n","import React from \"react\";\r\n\r\nimport { FunctionComponent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styles\r\nimport styles from \"./InputString.module.css\";\r\n// Styles\r\n\r\ninterface IInputString {\r\n  inputName: string;\r\n  inputType: \"text\" | \"email\";\r\n  inputValue?: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  inputId: string;\r\n  labelText: string;\r\n  inputWidth?: string | number | undefined;\r\n  marginRight?: string | number | undefined;\r\n  inputPlaceholder: string;\r\n}\r\n\r\ntype FC<P = IInputString> = FunctionComponent<P>;\r\n\r\nconst Input = styled.input`\r\n  width: ${(props) => props.width};\r\n  height: 60px;\r\n  background: #ffffff;\r\n  border: 1px solid #f1f1f1;\r\n  border-radius: 4px;\r\n\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding-left: 16px;\r\n  padding-top: 5px;\r\n  margin-right: ${(props) => props.style?.marginRight};\r\n  &:focus,\r\n  &:hover {\r\n    border-color: #01a7fd;\r\n    border-width: 2px;\r\n    outline-color: #01a7fd;\r\n  }\r\n`;\r\n\r\nconst InputString: FC<IInputString> = ({\r\n  inputName,\r\n  inputType,\r\n  inputId,\r\n  labelText,\r\n  inputWidth,\r\n  marginRight,\r\n  inputValue,\r\n  onChange,\r\n  inputPlaceholder,\r\n}) => {\r\n  return (\r\n    <div className={styles.input_box}>\r\n      <label className={styles.label}>{labelText}</label>\r\n      <Input\r\n        placeholder={inputPlaceholder}\r\n        style={{ marginRight: marginRight }}\r\n        width={inputWidth}\r\n        type={inputType}\r\n        name={inputName}\r\n        value={inputValue}\r\n        onChange={onChange}\r\n        id={inputId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputString;\r\n","import { FunctionComponent } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\ninterface IButton {\r\n  text: string;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  marginRight?: string | number;\r\n  marginLeft?: string | number;\r\n  marginTop?: string | number;\r\n  marginBottom?: string | number;\r\n  alignSelf?: string;\r\n  isButtonDisabled?: boolean;\r\n}\r\n\r\ntype FC<P> = FunctionComponent<P>;\r\n\r\nconst ButtonStyled = styled.button`\r\n  width: ${(props) => props.style?.width};\r\n  height: ${(props) => props.style?.height};\r\n  background: #01a7fd;\r\n  border-radius: 100px;\r\n  border-style: none;\r\n  cursor: pointer;\r\n  opacity: 1;\r\n  transition: opacity 0.3s linear;\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  color: #ffffff;\r\n  align-self: ${(props) => props.style?.alignSelf};\r\n  margin-right: ${(props) => props.style?.marginRight};\r\n  margin-left: ${(props) => props.style?.marginLeft};\r\n  margin-top: ${(props) => props.style?.marginTop};\r\n  margin-bottom: ${(props) => props.style?.marginBottom};\r\n  &:hover {\r\n    opacity: 0.6;\r\n    transition: opacity 0.3s linear;\r\n  }\r\n  &:disabled,\r\n  &hover {\r\n    background-color: #cccccc;\r\n    cursor: not-allowed;\r\n    transition: none;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Button: FC<IButton> = ({\r\n  text,\r\n  width,\r\n  height,\r\n  marginRight,\r\n  marginLeft,\r\n  marginTop,\r\n  marginBottom,\r\n  alignSelf,\r\n  isButtonDisabled,\r\n}) => {\r\n  return (\r\n    <ButtonStyled\r\n      style={{\r\n        marginRight: marginRight,\r\n        marginLeft: marginLeft,\r\n        marginTop: marginTop,\r\n        marginBottom: marginBottom,\r\n        width: width,\r\n        height: height,\r\n        alignSelf: alignSelf,\r\n      }}\r\n      disabled={isButtonDisabled}\r\n    >\r\n      {text}\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\n// Styles\r\nimport styles from \"./Converter.module.css\";\r\n// Styles\r\n\r\n// Types\r\nimport { TResults } from \"../../redux/types/currencies\";\r\n// Types\r\n\r\n// Redux\r\nimport { useSelector } from \"../../redux/typedHooks\";\r\n// Redux\r\n\r\n// Custom Hooks\r\nimport { useFormWithValidation } from \"../../customHooks/FormValidation\";\r\n// Custom Hooks\r\n\r\n// Components\r\nimport InputString from \"../../components/InputString/InputString\";\r\nimport Button from \"../../components/Button/Button\";\r\n// Components\r\n\r\ntype TCurrencyObj = {\r\n  [key: string]: number;\r\n};\r\n\r\nconst Converter = () => {\r\n  // Сумма после конвертации\r\n  const [result, setResult] = React.useState<number>();\r\n  //   Массив с курсами валют\r\n  const [currenciesArr, setCurrenciesArr] = React.useState<Array<TCurrencyObj>>(\r\n    []\r\n  );\r\n  //   Валюта в которую конвертируют\r\n  const [currencyTo, setCurrencyTo] = React.useState<string>(\"\");\r\n  //   Сумма валюты для конвертации\r\n  const [valueOfCurrency, setValueOfCurrency] = React.useState<string>(\"\");\r\n\r\n  const { currencies, basedCurrency } = useSelector((store) => store.currency);\r\n\r\n  const input = useFormWithValidation();\r\n\r\n  React.useEffect(() => {\r\n    const results: TResults | undefined = currencies && currencies.results;\r\n    let resultsArr: Array<TCurrencyObj> = [];\r\n\r\n    for (let key in results) {\r\n      let currencyObj: TCurrencyObj = {\r\n        [key]: results[key],\r\n      };\r\n      resultsArr.push(currencyObj);\r\n    }\r\n\r\n    setCurrenciesArr(resultsArr);\r\n  }, [currencies]);\r\n\r\n  React.useEffect(() => {\r\n    let currency: string = \"\";\r\n    let number: string = \"\";\r\n\r\n    let inputArr =\r\n      input.values.convert && input.values.convert.match!(/in ([^ ]*)/);\r\n\r\n    if (inputArr && inputArr !== null) {\r\n      currency = inputArr[1];\r\n    }\r\n\r\n    let numberArr = input.values.convert && input.values.convert.match(/\\d+/g);\r\n\r\n    if (numberArr && numberArr !== null) {\r\n      number = numberArr[0];\r\n    }\r\n\r\n    setValueOfCurrency(number);\r\n    setCurrencyTo(currency.toUpperCase());\r\n  }, [input.values.convert]);\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    let resultSumm: number = 0;\r\n    currenciesArr.forEach((currency) => {\r\n      for (let key in currency) {\r\n        if (currencyTo === key)\r\n          resultSumm = currency[key] * Number(valueOfCurrency);\r\n      }\r\n      setResult(resultSumm);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className={styles.converter}>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <InputString\r\n          inputName=\"convert\"\r\n          inputType=\"text\"\r\n          inputId=\"convert\"\r\n          labelText=\"Конвертация\"\r\n          inputWidth=\"600px\"\r\n          inputValue={input.values.convert || \"\"}\r\n          onChange={input.handleChange}\r\n          inputPlaceholder={`15 ${\r\n            basedCurrency === \"USD\" ? \"usd\" : \"rub\"\r\n          } in  ${basedCurrency === \"USD\" ? \"rub\" : \"usd\"}`}\r\n        />\r\n        <Button\r\n          text=\"Конвертировать\"\r\n          width=\"200px\"\r\n          height=\"50px\"\r\n          marginTop=\"30px\"\r\n        />\r\n      </form>\r\n      <p className={styles.result}>{result}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import React, { useCallback } from \"react\";\n\ntype TValues = {\n  [key: string]: string;\n};\n\n//хук управления формой и валидации формы\nexport function useFormWithValidation() {\n  const [values, setValues] = React.useState<TValues>({});\n  const [errors, setErrors] = React.useState({});\n  const [isValid, setIsValid] = React.useState(false);\n\n  const [isDirty, setIsDirty] = React.useState(false);\n  const [isEmail, setIsEmail] = React.useState(false);\n\n  const re =\n    /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target;\n    const name: string = target.name;\n    const value: string = target.value;\n    setValues({ ...values, [name]: value });\n    setErrors({ ...errors, [name]: target.validationMessage });\n    setIsValid(target.checkValidity());\n\n    value ? setIsDirty(false) : setIsDirty(true);\n    name === \"mail\" && re.test(String(value).toLowerCase())\n      ? setIsEmail(true)\n      : setIsEmail(false);\n  };\n\n  const resetForm = useCallback(\n    (\n      newValues = {},\n      newErrors = {},\n      newIsValid = false,\n      newIsDirty = false,\n      newEmail = false\n    ) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n      setIsDirty(newIsDirty);\n      setIsEmail(newEmail);\n    },\n    [setValues, setErrors, setIsValid, setIsDirty, setIsEmail]\n  );\n\n  return { values, handleChange, errors, isValid, resetForm, isDirty, isEmail };\n}\n","import React from \"react\";\r\n\r\n// Redux\r\nimport { useSelector } from \"../../redux/typedHooks\";\r\n// Redux\r\n\r\n// Types\r\nimport { TResults } from \"../../redux/types/currencies\";\r\n// Types\r\n\r\n// Styles\r\nimport styles from \"./Currencies.module.css\";\r\n// Styles\r\n\r\ntype TCurrencyObj = {\r\n  [key: string]: number;\r\n};\r\n\r\nconst Currencies = () => {\r\n  const { basedCurrency, currencies } = useSelector((state) => state.currency);\r\n  const [results, setResults] = React.useState<Array<TCurrencyObj>>([]);\r\n\r\n  React.useEffect(() => {\r\n    const results: TResults | undefined = currencies && currencies.results;\r\n    let resultsArr: Array<TCurrencyObj> = [];\r\n\r\n    for (let key in results) {\r\n      let currencyObj: TCurrencyObj = {\r\n        [key]: results[key],\r\n      };\r\n      resultsArr.push(currencyObj);\r\n    }\r\n\r\n    setResults(resultsArr);\r\n  }, [currencies]);\r\n\r\n  return (\r\n    <section className={styles.currencies}>\r\n      <div className={styles.container}>\r\n        {results.map((currency: any, index: number) => {\r\n          let currencyValue = \"\";\r\n          for (let key in currency) {\r\n            currencyValue = key;\r\n          }\r\n          return (\r\n            <p className={styles.currency} key={index}>\r\n              1 {basedCurrency} = {currency[currencyValue] * 1} {currencyValue}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Currencies;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport styles from \"./NavMenu.module.css\";\r\n// Styles\r\n\r\nconst NavMenu = () => {\r\n  return (\r\n    <nav className={styles.nav_menu}>\r\n      <Link to=\"/converter\" className={styles.link}>\r\n        Конвертер\r\n      </Link>\r\n      <Link to=\"/currencies\" className={styles.link}>\r\n        Валюты\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavMenu;\r\n","// Styles\r\nimport styles from \"./ChangeBaseCurrency.module.css\";\r\n// Styles\r\n\r\n// Redux\r\nimport { SET_DEFAULT_BASE_CURRENCY } from \"../../redux/actions/currencies\";\r\nimport { useDispatch } from \"../../redux/typedHooks\";\r\n// Redux\r\n\r\n// Components\r\nimport Button from \"../Button/Button\";\r\n// Components\r\n\r\nconst ChangeBaseCurrency = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSetUSD = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    dispatch({ type: SET_DEFAULT_BASE_CURRENCY, basedCurrency: \"USD\" });\r\n  };\r\n\r\n  const handleSetRUB = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    dispatch({ type: SET_DEFAULT_BASE_CURRENCY, basedCurrency: \"RUB\" });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.box}>\r\n      <button\r\n        className={styles.button}\r\n        onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\r\n          handleSetUSD(e)\r\n        }\r\n      >\r\n        USD\r\n      </button>\r\n      <button\r\n        className={styles.button}\r\n        onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>\r\n          handleSetRUB(e)\r\n        }\r\n      >\r\n        RUB\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangeBaseCurrency;\r\n","// Styles\r\nimport styles from \"./Header.module.css\";\r\n// Styles\r\n\r\n// Components\r\nimport NavMenu from \"../NavMenu/NavMenu\";\r\nimport ChangeBaseCurrency from \"../ChangeBaseCurrency/ChangeBaseCurrency\";\r\n// Components\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <NavMenu />\r\n      <ChangeBaseCurrency />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// Redux\nimport {\n  SET_DEFAULT_BASE_CURRENCY,\n  handleGetCurrencies,\n} from \"./redux/actions/currencies\";\nimport { useDispatch, useSelector } from \"./redux/typedHooks\";\n// Redux\n\n// Components\nimport Converter from \"./pages/Converter/Converter\";\nimport Currencies from \"./pages/Currencies/Currencies\";\nimport Header from \"./components/Header/Header\";\n// Components\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const { basedCurrency } = useSelector((store) => store.currency);\n\n  React.useEffect(() => {\n    let language = window.navigator && window.navigator.language;\n    language = language.substr(0, 2).toLowerCase();\n    if (language === \"ru\")\n      dispatch({ type: SET_DEFAULT_BASE_CURRENCY, basedCurrency: \"RUB\" });\n    if (language === \"en\")\n      dispatch({ type: SET_DEFAULT_BASE_CURRENCY, basedCurrency: \"USD\" });\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    dispatch(handleGetCurrencies(basedCurrency));\n  }, [basedCurrency, dispatch]);\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/converter\">\n          <Converter />\n        </Route>\n        <Route path=\"/currencies\">\n          <Currencies />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { compose } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}